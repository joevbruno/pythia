export class MockAxios {
  static async post(url, params) {
    console.log('***MOCK POST: ', url)

    let response
    if (params.profitLossSecret !== 'x') {
      response = { status: 200, data: { results: true, token: 'fake-token' } }
    } else {
      response = { status: 401 }
    }
    console.log('***MOCK data: ', url, response)

    return Promise.resolve(response)
  }

  static async get(url) {
    console.log('***MOCK GET: ', url)

    const response = { status: 200, data: {} }

    if (url.endsWith('/currency/BTC')) {
      response.data = (await import('./currency_btc.json')).default
    } else if (url.endsWith('/currency/ETH')) {
      response.data = (await import('./currency_eth.json')).default
    } else if (url.endsWith('/quotes?symbol=eth&limit=1')) {
      response.data = (await import('./quotes_eth.json')).default
    } else if (url.endsWith('/quotes?symbol=btc&limit=1')) {
      response.data = (await import('./quotes_btc.json')).default
    } else if (/.+[/]quotes[/]recent$/.test(url)) {
      response.data = (await import('./quotes_recent.json')).default
    } else if (/.+[/]portfolio_chart[/]\d+[?].+$/.test(url)) {
      response.data = (await import('./portfolio_chart.json')).default
    } else if (/.+[/]portfolio[/]\d+$/.test(url)) {
      response.data = (await import('./portfolio.json')).default
    } else if (/.+[/]market_chart[?].+$/.test(url)) {
      response.data = (await import('./market_chart.json')).default
    }

    console.log('***MOCK data: ', url, response)

    return Promise.resolve(response)
  }
}
