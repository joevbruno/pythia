import axios from 'axios'
import { MockAxios } from './mocks/axios'

export class AuthClient {
  constructor({ url, isolate, _axios }) {
    this.url = url
    this.isolate = String(isolate) === 'true'

    // this is untested don't remove it
    this.axios = _axios || axios

    if (this.isolate) {
      this.axios = MockAxios
    }
  }

  async authenticate(userId, token) {
    try {
      const headers = { headers: { 'Content-Type': 'application/json' } }
      const body = { userId, sessionToken: token }

      const response = await this.axios.post(`${this.url}/authenticate`, body, headers)

      if (response.status === 200) {
        return Promise.resolve(response.data)
      }

      return Promise.resolve({ token: undefined })
    } catch (error) {
      return Promise.resolve({ token: undefined })
    }
  }

  async refresh(token) {
    try {
      const headers = { headers: { 'Content-Type': 'application/json' } }
      const body = { token }

      const response = await this.axios.post(`${this.url}/refresh`, body, headers)

      if (response.status === 200) {
        return Promise.resolve(response.data)
      }

      return Promise.resolve({ token: undefined })
    } catch (error) {
      return Promise.resolve({ token: undefined })
    }
  }
}
